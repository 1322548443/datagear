<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.datagear.management.domain.Authorization">

	<insert id="insert">
		INSERT INTO DATAGEAR_AUTHORIZATION
			(
			AUTH_ID, AUTH_RESOURCE, AUTH_RESOURCE_TYPE, AUTH_PRINCIPAL, AUTH_PRINCIPAL_TYPE,
			AUTH_PERMISSION, AUTH_ENABLED, AUTH_CREATE_USER_ID
			)
		VALUES
			(
			#{entity.id}, #{entity.resource}, #{entity.resourceType}, #{entity.principal}, #{entity.principalType},
			#{entity.permission}, #{entity.enabled},#{entity.createUser.id}
			)
	</insert>
	
	<update id="update">
		UPDATE DATAGEAR_AUTHORIZATION SET
			AUTH_RESOURCE = #{entity.resource},
			AUTH_RESOURCE_TYPE = #{entity.resourceType},
			AUTH_PRINCIPAL = #{entity.principal},
			AUTH_PRINCIPAL_TYPE = #{entity.principalType},
			AUTH_PERMISSION = #{entity.permission},
			AUTH_ENABLED = #{entity.enabled}
		WHERE
			AUTH_ID = #{entity.id}
			<if test="OPERATOR != null and OPERATOR.admin != true">
			AND AUTH_CREATE_USER_ID = #{OPERATOR.id}
			</if>
	</update>
	
	<delete id="deleteById">
		DELETE FROM DATAGEAR_AUTHORIZATION
		WHERE
			AUTH_ID = #{id}
			<if test="OPERATOR != null and OPERATOR.admin != true">
			AND AUTH_CREATE_USER_ID = #{OPERATOR.id}
			</if>
	</delete>
	
	<select id="getById" resultType="org.datagear.management.domain.Authorization">
		SELECT
			T.*
		FROM
			(<include refid="queryView" />) T
		WHERE
			T.${_iq_}id${_iq_} = #{id}
	</select>
	
	<select id="query" resultType="org.datagear.management.domain.Authorization">
		SELECT
			T.*
		FROM
			(<include refid="queryView" />) T
		WHERE
			<include refid="queryCondition" />
		<include refid="common.queryOrder" />
	</select>
	
	<select id="pagingQueryCount" resultType="int">
		SELECT
			COUNT(*)
		FROM
			(<include refid="queryView" />) T
		WHERE
			<include refid="queryCondition" />
	</select>
	
	<select id="pagingQuery" resultType="org.datagear.management.domain.Authorization">
		<include refid="common.pagingQueryHead" />
			SELECT
				T.*
			FROM
				(<include refid="queryView" />) T
			WHERE
				<include refid="queryCondition" />
			<include refid="common.queryOrder" />
		<include refid="common.pagingQueryFoot" />
	</select>
	
	<sql id="queryView">
		SELECT
			A.AUTH_ID AS ${_iq_}id${_iq_},
			A.AUTH_RESOURCE AS ${_iq_}resource${_iq_},
			A.AUTH_RESOURCE_TYPE AS ${_iq_}resourceType${_iq_},
			A.AUTH_PRINCIPAL AS ${_iq_}principal${_iq_},
			A.AUTH_PRINCIPAL_TYPE AS ${_iq_}principalType${_iq_},
			A.AUTH_PERMISSION AS ${_iq_}permission${_iq_},
			A.AUTH_ENABLED AS ${_iq_}enabled${_iq_},
			A.AUTH_CREATE_TIME AS ${_iq_}ceateTime${_iq_},
			A.AUTH_CREATE_USER_ID AS ${_iq_}createUser.id${_iq_},
			B.USER_NAME AS ${_iq_}createUser.name${_iq_},
			B.USER_REAL_NAME AS ${_iq_}createUser.realName${_iq_},
			B.USER_IS_ADMIN AS ${_iq_}createUser.admin${_iq_},
			B.USER_CREATE_TIME AS ${_iq_}createUser.createTime${_iq_}
		FROM
			DATAGEAR_AUTHORIZATION A
		INNER JOIN
			DATAGEAR_USER B
		ON
			A.AUTH_CREATE_USER_ID = B.USER_ID
	</sql>
	
	<sql id="queryCondition">
		1 = 1
		<if test="queryKeyword != null">
		AND
		(
			${_iq_}resource${_iq_} LIKE #{queryKeyword}
		)
		</if>
		<include refid="common.queryCondition" />
	</sql>
</mapper>