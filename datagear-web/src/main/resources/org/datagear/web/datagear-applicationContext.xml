<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/tx
     http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.2.xsd">
     
    <bean id="propertyConfigurer"
    		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="locations">
    		<list>
    			<value>classpath:org/datagear/web/datagear.properties</value>
    			<value>classpath:org/datagear/web/datagear-version.properties</value>
    		</list>
    	</property>
    	<property name="fileEncoding" value="UTF-8" />
    </bean>
    
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
    	<property name="basenames">
    		<list>
    			<value>org.datagear.web.locales.datagear</value>
    		</list>
    	</property>
    </bean>
    
    <bean id="blobToFilePlaceholderFileContent" class="org.datagear.web.util.DirectoryFactory.FileContent">
    	<property name="name" value="[BLOB]" />
		<property name="content" value="BLOB-PLACEHOLDER" />
		<property name="encoding" value="UTF-8" />
    </bean>
    
    <bean id="blobFileManagerDirectoryFactory" class="org.datagear.web.util.DirectoryFactory" init-method="init">
    	<property name="directoryName" value="${directory.blob}" />
    	<property name="initFileContents">
    		<list>
    			<ref bean="blobToFilePlaceholderFileContent" />
    		</list>
    	</property>
    </bean>
    <bean id="blobFileManagerDirectory" factory-bean="blobFileManagerDirectoryFactory" factory-method="getDirectory" />
    
    <bean id="blobToFilePlaceholderName" factory-bean="blobToFilePlaceholderFileContent" factory-method="getName" />
    
    <bean id="driverEntityManagerRootDirectoryFactory" class="org.datagear.web.util.DirectoryFactory" init-method="init">
    	<property name="directoryName" value="${directory.driver}" />
    </bean>
    <bean id="driverEntityManagerRootDirectory" factory-bean="driverEntityManagerRootDirectoryFactory" factory-method="getDirectory" />
    
    <bean id="derbyRootDirectoryFactory" class="org.datagear.web.util.DirectoryFactory" init-method="init">
    	<property name="directoryName" value="${directory.derby}" />
    	<property name="createIfInexistence" value="false" />
    </bean>
    
    <bean id="tempDirectoryFactory" class="org.datagear.web.util.DirectoryFactory" init-method="init">
    	<property name="directoryName" value="${directory.temp}" />
    </bean>
    <bean id="tempDirectory" factory-bean="tempDirectoryFactory" factory-method="getDirectory" />
    
    <bean id="tempDriverLibraryRootDirectoryFactory" class="org.datagear.web.util.DirectoryFactory" init-method="init">
    	<property name="directoryName" value="${directory.temp.driverEntity}" />
    </bean>
    <bean id="tempDriverLibraryRootDirectory" factory-bean="tempDriverLibraryRootDirectoryFactory" factory-method="getDirectory" />
    
    <bean id="tempDataExchangeRootDirectoryFactory" class="org.datagear.web.util.DirectoryFactory" init-method="init">
    	<property name="directoryName" value="${directory.temp.dataExchange}" />
    </bean>
    <bean id="tempDataExchangeRootDirectory" factory-bean="tempDataExchangeRootDirectoryFactory" factory-method="getDirectory" />
    
    <bean id="tempSqlpadRootDirectoryFactory" class="org.datagear.web.util.DirectoryFactory" init-method="init">
    	<property name="directoryName" value="${directory.temp.sqlpad}" />
    </bean>
    <bean id="tempSqlpadRootDirectory" factory-bean="tempSqlpadRootDirectoryFactory" factory-method="getDirectory" />
    
    <bean id="chartPluginRootDirectoryFactory" class="org.datagear.web.util.DirectoryFactory" init-method="init">
    	<property name="directoryName" value="${directory.chartPlugin}" />
    </bean>
    <bean id="chartPluginRootDirectory" factory-bean="chartPluginRootDirectoryFactory" factory-method="getDirectory" />
	
    <bean id="dashboardRootDirectoryFactory" class="org.datagear.web.util.DirectoryFactory" init-method="init">
    	<property name="directoryName" value="${directory.dashboard}" />
    </bean>
    <bean id="dashboardRootDirectory" factory-bean="dashboardRootDirectoryFactory" factory-method="getDirectory" />
	
    <bean id="dataSource"
    		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName">
			<value>org.apache.derby.jdbc.EmbeddedDriver</value>
		</property>
		<property name="url">
			<value>jdbc:derby:#{derbyRootDirectoryFactory.getDirectoryAbsolutePath()};create=true</value>
		</property>
		<!--
		<property name="username">
			<value></value>
		</property>
		<property name="password">
			<value></value>
		</property>
		-->
    </bean>
    
    <bean id="dbVersionManager" class="org.datagear.management.dbversion.DbVersionManager" init-method="upgrade">
    	<property name="dataSource" ref="dataSource" />
    </bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:org/datagear/management/mapper/*.xml" />
	</bean>
	
	<bean id="databaseInfoResolver" class="org.datagear.dbinfo.GenericDatabaseInfoResolver">
		<property name="devotedDatabaseInfoResolvers">
			<list>
				<bean class="org.datagear.dbinfo.support.MySqlDevotedDatabaseInfoResolver" />
				<bean class="org.datagear.dbinfo.WildcardDevotedDatabaseInfoResolver" />
			</list>
		</property>
	</bean>
	
	<bean id="driverEntityManager" class="org.datagear.connection.XmlDriverEntityManager" destroy-method="releaseAll">
		<constructor-arg ref="driverEntityManagerRootDirectory" />
	</bean>
	
	<bean id="xmlDriverEntityManagerInitializer" class="org.datagear.web.util.XmlDriverEntityManagerInitializer" init-method="init" depends-on="driverEntityManager">
		<property name="xmlDriverEntityManager" ref="driverEntityManager" />
	</bean>
	
	<bean id="connectionSource" class="org.datagear.connection.DefaultConnectionSource">
		<property name="driverEntityManager" ref="driverEntityManager" />
		<property name="driverChecker">
			<bean class="org.datagear.web.util.SqlDriverChecker">
				<property name="databaseInfoResolver" ref="databaseInfoResolver" />
			</bean>
		</property>
		<property name="propertiesProcessor">
			<bean class="org.datagear.connection.GenericPropertiesProcessor">
				<property name="devotedPropertiesProcessors">
					<list>
						<bean class="org.datagear.connection.support.MySqlDevotedPropertiesProcessor" />
						<bean class="org.datagear.connection.support.OracleDevotedPropertiesProcessor" />
					</list>
				</property>
			</bean>
		</property>
	</bean>
	
	<bean id="primitiveModelSource" class="org.datagear.dbmodel.DatabasePrimitiveModelSource" />
	<bean id="primitiveModelResolver" class="org.datagear.dbmodel.TypeMapPrimitiveModelResolver">
		<property name="primitiveModelSource" ref="primitiveModelSource" />
	</bean>
	
	<bean id="columnConverterResolver" class="org.datagear.dbmodel.TypeMapColumnConverterResolver">
		<property name="literalColumnConverterMap">
			<map>
				<entry key="BINARY">
					<bean class="org.datagear.persistence.columnconverter.BytesColumnConverter">
						<property name="directory" ref="blobFileManagerDirectory" />
					</bean>
				</entry>
				<entry key="BLOB">
					<bean class="org.datagear.persistence.columnconverter.BlobColumnConverter">
						<property name="directory" ref="blobFileManagerDirectory" />
					</bean>
				</entry>
				<entry key="CLOB">
					<bean class="org.datagear.persistence.columnconverter.ClobColumnConverter">
						<property name="directory" ref="blobFileManagerDirectory" />
					</bean>
				</entry>
				<entry key="LONGNVARCHAR">
					<bean class="org.datagear.persistence.columnconverter.StringColumnConverter">
						<property name="directory" ref="blobFileManagerDirectory" />
					</bean>
				</entry>
				<entry key="LONGVARBINARY">
					<bean class="org.datagear.persistence.columnconverter.BytesColumnConverter">
						<property name="directory" ref="blobFileManagerDirectory" />
					</bean>
				</entry>
				<entry key="LONGVARCHAR">
					<bean class="org.datagear.persistence.columnconverter.StringColumnConverter">
						<property name="directory" ref="blobFileManagerDirectory" />
					</bean>
				</entry>
				<entry key="NCLOB">
					<bean class="org.datagear.persistence.columnconverter.ClobColumnConverter">
						<property name="directory" ref="blobFileManagerDirectory" />
					</bean>
				</entry>
				<entry key="VARBINARY">
					<bean class="org.datagear.persistence.columnconverter.BytesColumnConverter">
						<property name="directory" ref="blobFileManagerDirectory" />
					</bean>
				</entry>
			</map>
		</property>
	</bean>
	
	<bean id="modelNameResolver" class="org.datagear.dbmodel.IdentifierModelNameResolver" />
	
	<bean id="databaseModelResolver" class="org.datagear.dbmodel.GenericDatabaseModelResolver">
		<property name="devotedDatabaseModelResolvers">
			<list>
				<bean class="org.datagear.dbmodel.WildcardDevotedDatabaseModelResolver">
					<property name="databaseInfoResolver" ref="databaseInfoResolver" />
					<property name="primitiveModelResolver" ref="primitiveModelResolver" />
					<property name="columnConverterResolver" ref="columnConverterResolver" />
					<property name="conversionService" ref="conversionService" />
					<property name="modelNameResolver" ref="modelNameResolver" />
				</bean>
			</list>
		</property>
	</bean>
	
	<bean id="cachedDbModelFactory" class="org.datagear.web.util.CachedDbModelFactoryImpl" init-method="init">
		<property name="databaseModelResolver" ref="databaseModelResolver" />
		<property name="modelNameResolver" ref="modelNameResolver" />
	</bean>
	
	<bean id="dialectSource" class="org.datagear.persistence.support.DefaultDialectSource">
		<property name="databaseInfoResolver" ref="databaseInfoResolver" />
		<property name="dialectBuilders">
			<list>
				<bean class="org.datagear.persistence.support.dialect.MysqlDialectBuilder" />
				<bean class="org.datagear.persistence.support.dialect.OracleDialectBuilder" />
				<bean class="org.datagear.persistence.support.dialect.SqlServerDialectBuilder" />
			</list>
		</property>
	</bean>
	
	<bean id="selectOptions" class="org.datagear.persistence.support.SelectOptions" />
	
	<bean id="variableExpressionResolver" class="org.datagear.persistence.support.VariableExpressionResolver" />
	
	<bean id="sqlExpressionResolver" class="org.datagear.persistence.support.SqlExpressionResolver" />
	
	<bean id="persistenceManager" class="org.datagear.persistence.support.DefaultPersistenceManager">
		<property name="dialectSource" ref="dialectSource" />
		<property name="conversionService" ref="conversionService" />
		<property name="variableExpressionResolver" ref="variableExpressionResolver" />
		<property name="sqlExpressionResolver" ref="sqlExpressionResolver" />
		<property name="selectPersistenceOperation">
			<bean class="org.datagear.persistence.support.SelectPersistenceOperation">
				<property name="selectOptions" ref="selectOptions" />
			</bean>
		</property>
	</bean>
	
	<bean id="schemaService" class="org.datagear.management.service.impl.SchemaServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="driverEntityManager" ref='driverEntityManager' />
		<property name="authorizationService" ref="authorizationService" />
	</bean>
	
	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />
	
	<bean id="userPasswordEncoder" class="org.datagear.web.security.UserPasswordEncoderImpl">
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>
    
	<bean id="userService" class="org.datagear.management.service.impl.UserServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="userPasswordEncoder" ref="userPasswordEncoder" />
	</bean>
	
	<bean id="globalSettingService" class="org.datagear.management.service.impl.GlobalSettingServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="smtpSettingPasswordEncryptor">
			<bean class="org.datagear.web.security.SmtpSettingPasswordEncryptorImpl" />
		</property>
	</bean>
	
	<bean id="resetPasswordRequestService" class="org.datagear.management.service.impl.ResetPasswordRequestServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="userPasswordEncoder" ref="userPasswordEncoder" />
	</bean>
	
	<bean id="resetPasswordRequestConfig" class="org.datagear.web.ResetPasswordRequestConfig">
		<property name="handleDelayHours" value="${resetPasswordRequestDelayHours}" />
		<property name="historyRetainDays" value="${resetPasswordRequestHistoryRetainDays}" />
	</bean>
	
	<bean id="resetPasswordRequestHistoryService" class="org.datagear.management.service.impl.ResetPasswordRequestHistoryServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="roleService" class="org.datagear.management.service.impl.RoleServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="roleUserService" class="org.datagear.management.service.impl.RoleUserServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="authorizationService" class="org.datagear.management.service.impl.AuthorizationServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="resourceServices">
			<list>
				<ref bean="schemaService" />
			</list>
		</property>
	</bean>
	
	<bean id="templateDashboardWidgetResManager" class="org.datagear.analysis.support.FileTemplateDashboardWidgetResManager">
		<property name="rootDirectory" ref="dashboardRootDirectory" />
	</bean>
	
	<bean id="htmlTplDashboardWidgetRendererParent" abstract="true" class="org.datagear.analysis.support.html.HtmlTplDashboardWidgetHtmlRenderer">
		<property name="dashboardImports">
			<list>
				<bean class="org.datagear.analysis.support.html.HtmlDashboardImport">
					<property name="name" value="jquery" />
					<property name="content" value="&lt;script type='text/javascript' src='$CONTEXTPATH/static/script/jquery/jquery-1.12.4.js'&gt;&lt;/script&gt;" />
				</bean>
				<bean class="org.datagear.analysis.support.html.HtmlDashboardImport">
					<property name="name" value="echarts" />
					<property name="content" value="&lt;script type='text/javascript' src='$CONTEXTPATH/static/script/echarts-4.6.0/echarts.js'&gt;&lt;/script&gt;" />
				</bean>
				<bean class="org.datagear.analysis.support.html.HtmlDashboardImport">
					<property name="name" value="chart-util" />
					<property name="content" value="&lt;script type='text/javascript' src='$CONTEXTPATH/static/script/datagear-chart-util.js'&gt;&lt;/script&gt;" />
				</bean>
				<bean class="org.datagear.analysis.support.html.HtmlDashboardImport">
					<property name="name" value="dashboard-renderer" />
					<property name="content" value="&lt;script type='text/javascript' src='$CONTEXTPATH/static/script/datagear-dashboard-renderer.js'&gt;&lt;/script&gt;" />
				</bean>
			</list>
		</property>
		<property name="templateDashboardWidgetResManager" ref="templateDashboardWidgetResManager" />
		<property name="chartWidgetSource" ref="htmlChartWidgetEntityService" />
	</bean>
	
	<bean id="sqlDataSetEntityService" class="org.datagear.management.service.impl.SqlDataSetEntityServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="connectionSource" ref="connectionSource" />
		<property name="schemaService" ref="schemaService" />
		<property name="authorizationService" ref="authorizationService" />
	</bean>
	
	<bean id="directoryHtmlChartPluginManager" class="org.datagear.analysis.support.html.DirectoryHtmlChartPluginManager">
		<property name="directory" ref="chartPluginRootDirectory" />
	</bean>
	<bean id="directoryHtmlChartPluginManagerInitializer" class="org.datagear.web.util.DirectoryHtmlChartPluginManagerInitializer" init-method="init">
		<property name="directoryHtmlChartPluginManager" ref="directoryHtmlChartPluginManager" />
	</bean>
	
	<bean id="htmlChartWidgetEntityService" class="org.datagear.management.service.impl.HtmlChartWidgetEntityServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="chartPluginManager" ref="directoryHtmlChartPluginManager" />
		<property name="sqlDataSetEntityService" ref="sqlDataSetEntityService" />
		<property name="authorizationService" ref="authorizationService" />
	</bean>
	
	<bean id="chartShowHtmlTplDashboardWidgetHtmlRenderer" parent="htmlTplDashboardWidgetRendererParent">
		<property name="templateDashboardWidgetResManager">
			<bean id="templateDashboardWidgetResManager" class="org.datagear.analysis.support.FileTemplateDashboardWidgetResManager">
				<property name="rootDirectory" ref="dashboardRootDirectory" />
				<property name="templateAsContent" value="true" />
			</bean>
		</property>
	</bean>
	
	<bean id="htmlTplDashboardWidgetRenderer" parent="htmlTplDashboardWidgetRendererParent">
	</bean>
	
	<bean id="htmlTplDashboardWidgetEntityService" class="org.datagear.management.service.impl.HtmlTplDashboardWidgetEntityServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
		<property name="htmlTplDashboardWidgetRenderer" ref="htmlTplDashboardWidgetRenderer" />
		<property name="authorizationService" ref="authorizationService" />
	</bean>
	
	<bean id="sqlHistoryService" class="org.datagear.management.service.impl.SqlHistoryServiceImpl">
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
	
	<bean id="sqlDateFormatter" class="org.datagear.web.format.SqlDateFormatter" />
	<bean id="sqlTimeFormatter" class="org.datagear.web.format.SqlTimeFormatter" />
	<bean id="sqlTimestampFormatter" class="org.datagear.web.format.SqlTimestampFormatter" />
	<bean id="dateFormatter" class="org.datagear.web.format.DateFormatter" />
    
    <bean id="conversionService" class="org.datagear.web.convert.CustomFormattingConversionServiceFactoryBean">
    	<property name="converters">
    		<set>
    			<bean class="org.datagear.web.convert.StringToFileConverter">
    				<property name="directory" ref="blobFileManagerDirectory" />
    			</bean>
    		</set>
    	</property>
    	<property name="formatters">
    		<set>
    			<ref bean="sqlDateFormatter" />
    			<ref bean="sqlTimeFormatter" />
    			<ref bean="sqlTimestampFormatter" />
    			<ref bean="dateFormatter" />
    		</set>
    	</property>
    </bean>
    
    <bean id ="modelDataConverter" class="org.datagear.web.convert.ModelDataConverter">
		<property name="conversionService" ref="conversionService" />
		<property name="variableExpressionResolver" ref="variableExpressionResolver" />
		<property name="sqlExpressionResolver" ref="sqlExpressionResolver" />
	</bean>
	
    <bean id ="classDataConverter" class="org.datagear.web.convert.ClassDataConverter">
		<property name="conversionService" ref="conversionService" />
		<property name="variableExpressionResolver" ref="variableExpressionResolver" />
		<property name="sqlExpressionResolver" ref="sqlExpressionResolver" />
	</bean>
	
	<bean id="localeDateSerializer" class="org.datagear.web.json.fastjson.LocaleDateSerializer">
		<property name="dateFormatter" ref="dateFormatter" />
	</bean>
	<bean id="localeSqlDateSerializer" class="org.datagear.web.json.fastjson.LocaleSqlDateSerializer">
		<property name="sqlDateFormatter" ref="sqlDateFormatter" />
	</bean>
	<bean id="localeSqlTimeSerializer" class="org.datagear.web.json.fastjson.LocaleSqlTimeSerializer">
		<property name="sqlTimeFormatter" ref="sqlTimeFormatter" />
	</bean>
	<bean id="localeSqlTimestampSerializer" class="org.datagear.web.json.fastjson.LocaleSqlTimestampSerializer">
		<property name="sqlTimestampFormatter" ref="sqlTimestampFormatter" />
	</bean>
	<bean id="fileSerializer" class="org.datagear.web.json.fastjson.FileSerializer">
		<property name="directory" ref="blobFileManagerDirectory" />
		<property name="deleteHeadSeparator" value="true" />
	</bean>
	<bean id="fastJsonConfigFactory" class="org.datagear.web.json.fastjson.FastJsonConfigFactory">
		<property name="objectSerializerStringMap">
			<map>
				<entry key="java.util.Date" value-ref="localeDateSerializer" />
				<entry key="java.sql.Date" value-ref="localeSqlDateSerializer" />
				<entry key="java.sql.Time" value-ref="localeSqlTimeSerializer" />
				<entry key="java.sql.Timestamp" value-ref="localeSqlTimestampSerializer" />
				<entry key="java.io.File" value-ref="fileSerializer" />
			</map>
		</property>
	</bean>
	<bean id="serializeConfig" factory-bean="fastJsonConfigFactory" factory-method="getSerializeConfig" />
	<bean id="fastJsonConfig" factory-bean="fastJsonConfigFactory" factory-method="getFastJsonConfig" />
	<bean id="serializerFeatures" factory-bean="fastJsonConfigFactory" factory-method="getSerializerFeatures" />
	
	<bean id="changelogResolver" class="org.datagear.web.util.ChangelogResolver" />
	
	<!-- cometd配置开始 -->
	<!--
	<bean id="bayeuxJsonContext" class="org.cometd.server.JacksonJSONContextServer" />
	-->
	<bean id="bayeuxJsonContext" class="org.datagear.web.sqlpad.FastjsonJSONContextServer">
		<property name="serializeConfig" ref="serializeConfig" />
		<property name="serializerFeatures" ref="serializerFeatures" />
	</bean>
	
	<bean id="bayeuxServerFactory" class="org.datagear.web.util.BayeuxServerFactory">
		<property name="options">
			<map>
				<entry key="logLevel" value="3" />
				<entry key="timeout" value="30000" />
				<entry key="maxInterval" value="120000" />
				<entry key="jsonContext" value-ref="bayeuxJsonContext" />
			</map>
		</property>
		<property name="extensions">
			<list>
				<bean class="org.cometd.server.ext.AcknowledgedMessagesExtension" />
			</list>
		</property>
	</bean>
	
	<bean id="bayeuxServer" factory-bean="bayeuxServerFactory" factory-method="getBayeuxServer" init-method="start" destroy-method="stop" />
	
	<bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
		<property name="attributes">
			<map>
				<entry key="org.cometd.bayeux">
					<ref local="bayeuxServer" />
				</entry>
			</map>
		</property>
	</bean>
	<!-- cometd配置结束 -->
	
	<bean id="modelSqlSelectService" class="org.datagear.dbmodel.ModelSqlSelectService">
		<property name="blobFileManagerDirectory" ref="blobFileManagerDirectory" />
		<property name="blobToFilePlaceholderName" ref="blobToFilePlaceholderName" />
		<property name="fullLoadingLobMaxRow" value="3" />
	</bean>
	
	<bean id="sqlpadCometdService" class="org.datagear.web.sqlpad.SqlpadCometdService">
        <constructor-arg><ref local="bayeuxServer" /></constructor-arg>
    </bean>
    
    <bean id="sqlpadExecutionService" class="org.datagear.web.sqlpad.SqlpadExecutionService" destroy-method="shutdown">
    	<property name="connectionSource" ref="connectionSource" />
    	<property name="messageSource" ref="messageSource" />
    	<property name="sqlpadCometdService" ref="sqlpadCometdService" />
    	<property name="databaseModelResolver" ref="databaseModelResolver" />
    	<property name="sqlHistoryService" ref="sqlHistoryService" />
    	<property name="modelSqlSelectService" ref="modelSqlSelectService" />
    </bean>
    
    <bean id="dataExchangeService" class="org.datagear.dataexchange.GenericDataExchangeService">
    	<property name="devotedDataExchangeServices">
    		<list>
    			<bean class="org.datagear.dataexchange.support.CsvDataImportService">
    				<property name="databaseInfoResolver" ref="databaseInfoResolver" />
    			</bean>
    			<bean class="org.datagear.dataexchange.support.CsvDataExportService">
    				<property name="databaseInfoResolver" ref="databaseInfoResolver" />
    			</bean>
    			<bean class="org.datagear.dataexchange.support.SqlDataImportService">
    			</bean>
    			<bean class="org.datagear.dataexchange.support.SqlDataExportService">
    				<property name="databaseInfoResolver" ref="databaseInfoResolver" />
    			</bean>
    			<bean class="org.datagear.dataexchange.support.ExcelDataImportService">
    				<property name="databaseInfoResolver" ref="databaseInfoResolver" />
    			</bean>
    			<bean class="org.datagear.dataexchange.support.ExcelDataExportService">
    				<property name="databaseInfoResolver" ref="databaseInfoResolver" />
    			</bean>
    			<bean class="org.datagear.dataexchange.support.JsonDataImportService">
    				<property name="databaseInfoResolver" ref="databaseInfoResolver" />
    			</bean>
    			<bean class="org.datagear.dataexchange.support.JsonDataExportService">
    				<property name="databaseInfoResolver" ref="databaseInfoResolver" />
    			</bean>
    			<bean class="org.datagear.dataexchange.BatchDataExchangeService" destroy-method="shutdown">
    				<property name="subDataExchangeService" ref="dataExchangeService" />
    			</bean>
    		</list>
    	</property>
    </bean>
	
	<bean id="dataExchangeCometdService" class="org.datagear.web.cometd.dataexchange.DataExchangeCometdService">
        <constructor-arg><ref local="bayeuxServer" /></constructor-arg>
    </bean>
    
	<!-- 定时任务开始 -->
	
	<!-- 删除过期的BLOB文件 -->
	<bean id="deleteExpiredBlobJob" class="org.datagear.web.scheduling.DeleteExpiredFileJob">
		<property name="directory" ref="blobFileManagerDirectory" />
		<property name="ignoreFileName" ref="blobToFilePlaceholderName" />
		<property name="expireThresholdMinutes" value="60" />
	</bean>
	<bean id="deleteExpiredBlobJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="deleteExpiredBlobJob" />
		<property name="targetMethod" value="delete" />
	</bean>
	<bean id="deleteExpiredBlobJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="deleteExpiredBlobJobDetail" />
		<property name="cronExpression" value="0 0,30 * * * ?" /><!-- 每半小时 -->
	</bean>
	
	<!-- 处理重置密码请求 -->
	<bean id="handleResetPasswordRequestJob" class="org.datagear.web.scheduling.HandleResetPasswordRequestJob">
		<property name="resetPasswordRequestService" ref="resetPasswordRequestService" />
		<property name="resetPasswordRequestConfig" ref="resetPasswordRequestConfig" />
		<property name="userService" ref="userService" />
		<property name="resetPasswordRequestHistoryService" ref="resetPasswordRequestHistoryService" />
	</bean>
	<bean id="handleResetPasswordRequestJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="handleResetPasswordRequestJob" />
		<property name="targetMethod" value="handle" />
	</bean>
	<bean id="handleResetPasswordRequestJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="handleResetPasswordRequestJobDetail" />
		<property name="cronExpression" value="0 * * * * ?" /><!-- 每分钟 -->
	</bean>
	
	<!-- 删除过期的重置密码请求历史数据 -->
	<bean id="deleteExpiredResetPasswordRequestHistoryJob" class="org.datagear.web.scheduling.DeleteExpiredResetPasswordRequestHistoryJob">
		<property name="resetPasswordRequestConfig" ref="resetPasswordRequestConfig" />
		<property name="resetPasswordRequestHistoryService" ref="resetPasswordRequestHistoryService" />
	</bean>
	<bean id="deleteExpiredResetPasswordRequestHistoryJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="deleteExpiredResetPasswordRequestHistoryJob" />
		<property name="targetMethod" value="delete" />
	</bean>
	<bean id="deleteExpiredResetPasswordRequestHistoryJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="deleteExpiredResetPasswordRequestHistoryJobDetail" />
		<property name="cronExpression" value="0 0 2 * * ?" /><!-- 每天凌晨2点 -->
	</bean>
	
	<!-- 删除临时文件 -->
	<bean id="deleteTempFileJob" class="org.datagear.web.scheduling.DeleteExpiredFileJob">
		<property name="directory" ref="tempDirectory" />
		<property name="expireThresholdMinutes" value="1440" />
	</bean>
	<bean id="deleteTempFileJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="deleteTempFileJob" />
		<property name="targetMethod" value="delete" />
	</bean>
	<bean id="deleteTempFileJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="deleteTempFileJobDetail" />
		<property name="cronExpression" value="0 0 1 * * ?" /><!-- 每天凌晨1点 -->
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="deleteExpiredBlobJobCronTrigger" />
				<ref bean="handleResetPasswordRequestJobCronTrigger" />
				<ref bean="deleteExpiredResetPasswordRequestHistoryJobCronTrigger" />
				<ref bean="deleteTempFileJobCronTrigger" />
			</list>
		</property>
	</bean>
	
	<!-- 定时任务结束 -->
	
</beans>